"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Buff API
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã API –∏ –æ—Ç–ª–∞–¥–∫–∏
"""

import asyncio
import logging
from buff163_unofficial_api import Buff163API
from config import config
from api.currency_converter import currency_converter

logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

logger = logging.getLogger(__name__)


async def test_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Buff API"""
    
    print("=" * 60)
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Buff API")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç
    print("\n0Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç...")
    try:
        await currency_converter.update_rates()
        rates = await currency_converter.get_rates()
        print(f"‚úÖ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã: 1 CNY = {rates['USD']:.4f} USD, {rates['RUB']:.2f} RUB")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–æ–≤: {e}")
        print("–ë—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫—É—Ä—Å—ã")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API
        print("\n1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API...")
        api = Buff163API(session_cookie=config.BUFF_SESSION_COOKIE)
        print("‚úÖ API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã
        print("\n2Ô∏è‚É£ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã API:")
        methods = [method for method in dir(api) if not method.startswith('_')]
        for method in methods:
            print(f"   - {method}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        goods_id = 43011  # ID –¥–ª—è —Ç–µ—Å—Ç–∞
        print(f"\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ {goods_id}...")
        
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã
        print("\n   –ü–æ–ø—ã—Ç–∫–∞ 1: get_item() - –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏")
        try:
            result = api.get_item(goods_id)
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ! –¢–∏–ø: {type(result)}")
            print(f"   –ê—Ç—Ä–∏–±—É—Ç—ã: {dir(result)}")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
            if hasattr(result, 'market_hash_name'):
                print(f"   üì¶ –ù–∞–∑–≤–∞–Ω–∏–µ: {result.market_hash_name}")
            
        if hasattr(result, 'sell_min_price'):
            price = float(result.sell_min_price) if result.sell_min_price else 0
            print(f"   üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {result.sell_min_price} CNY")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é
            if price > 0:
                prices = await currency_converter.convert(price)
                print(f"\n   üí± –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è:")
                print(f"   {currency_converter.format_price(prices)}")
            
            if hasattr(result, 'sell_num'):
                print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {result.sell_num}")
            
            if hasattr(result, 'id'):
                print(f"   üîë ID —Ç–æ–≤–∞—Ä–∞: {result.id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º goods_info (Steam —Ü–µ–Ω–∞)
            if hasattr(result, 'goods_info'):
                print(f"\n   üìä goods_info –Ω–∞–π–¥–µ–Ω!")
                if hasattr(result.goods_info, 'steam_price_cny'):
                    print(f"   üí≤ Steam —Ü–µ–Ω–∞: {result.goods_info.steam_price_cny} CNY")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()
        
        print("\n   –ü–æ–ø—ã—Ç–∫–∞ 2: get_featured_market()")
        try:
            market = api.get_featured_market()
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ! –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(list(market)) if market else 0}")
            
            # –°–º–æ—Ç—Ä–∏–º –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä
            market_list = list(market)
            if market_list:
                first_item = market_list[0]
                print(f"   –ê—Ç—Ä–∏–±—É—Ç—ã —Ç–æ–≤–∞—Ä–∞: {dir(first_item)}")
                if hasattr(first_item, 'market_hash_name'):
                    print(f"   –ü—Ä–∏–º–µ—Ä —Ç–æ–≤–∞—Ä–∞: {first_item.market_hash_name}")
                if hasattr(first_item, 'sell_min_price'):
                    print(f"   –¶–µ–Ω–∞: {first_item.sell_min_price}")
                if hasattr(first_item, 'id'):
                    print(f"   ID: {first_item.id}")
                elif hasattr(first_item, 'goods_id'):
                    print(f"   goods_id: {first_item.goods_id}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print("\n" + "=" * 60)
        print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("=" * 60)
        
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(test_api())

